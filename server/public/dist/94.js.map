{"version":3,"file":"94.js","mappings":"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","sources":["webpack://alecture/./pages/DirectMessage/styles.tsx","webpack://alecture/./pages/DirectMessage/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n  & img {\n    margin-right: 5px;\n  }\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Container, Header } from './styles';\nimport gravatar from 'gravatar';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport fetcher from '@utils/fetcher';\nimport { useParams } from 'react-router';\nimport { IDM, IUser } from '@typings/db';\nimport ChatBox from '@components/ChatBox';\nimport ChatList from '@components/ChatList';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport makeSection from '@utils/makeSection';\nimport useSocket from '@hooks/useSocket';\n\nconst PAGE_SIZE = 20;\nconst DirectMessage = () => {\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\n  const { data: userData } = useSWR<IUser>(`/api/workspaces/${workspace}/users/${id}`, fetcher);\n  const { data: myData } = useSWR<IUser>('/api/users', fetcher);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IDM[]>(\n    (index) => `/api/workspaces/${workspace}/dms/${id}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    fetcher,\n  ); //채팅받아오는 API\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [chat, onChangeChat, setChat] = useInput('');\n  const [socket] = useSocket(workspace);\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE) || false;\n\n  const onSubmitForm = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            SenderId: myData!.id,\n            Sender: myData!,\n            ReceiverId: userData!.id,\n            Receiver: userData!,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false).then(() => {\n          localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n          setChat('');\n          if (scrollbarRef.current) {\n            // console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, {\n            content: chat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, workspace, id, myData, userData, chatData, mutateChat, setChat],\n  );\n\n  const onMessage = useCallback((data: IDM) => {\n    // id는 상대방 아이디\n    if (data.SenderId === Number(id) && myData?.id !== Number(id)) {\n      mutateChat((chatData) => {\n        chatData?.[0].unshift(data);\n        return chatData;\n      }, false).then(() => {\n        if (scrollbarRef.current) {\n          if (\n            scrollbarRef.current.getScrollHeight() <\n            scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n          ) {\n            // console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            setTimeout(() => {\n              scrollbarRef.current?.scrollToBottom();\n            }, 50);\n          }\n        }\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      scrollbarRef.current?.scrollToBottom();\n    }\n  }, [chatData]);\n\n  if (!userData || !myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? ([] as IDM[]).concat(...chatData).reverse() : []);\n\n  return (\n    <Container>\n      <Header>\n        <img src={gravatar.url(userData?.email, { s: '24px', d: 'retro' })} alt={userData?.toString()} />\n        <span>{userData?.nickname}</span>\n      </Header>\n      <ChatList chatSections={chatSections} scrollRef={scrollbarRef} setSize={setSize} isReachingEnd={isReachingEnd} />\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\n    </Container>\n  );\n};\n\nexport default DirectMessage;\n"],"names":["Container","Header","useParams","workspace","id","userData","useSWR","fetcher","data","myData","useSWRInfinite","index","chatData","mutateChat","mutate","setSize","scrollbarRef","useRef","useInput","chat","onChangeChat","setChat","socket","useSocket","isReachingEnd","length","onSubmitForm","useCallback","e","preventDefault","trim","savedChat","prevChatData","unshift","content","SenderId","Sender","ReceiverId","Receiver","createdAt","Date","then","localStorage","setItem","getTime","toString","current","scrollToBottom","axios","catch","console","error","onMessage","Number","getScrollHeight","getClientHeight","getScrollTop","setTimeout","useEffect","on","off","chatSections","makeSection","concat","reverse","src","gravatar","email","s","d","alt","nickname","ChatList","scrollRef","ChatBox"],"sourceRoot":""}