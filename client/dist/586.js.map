{"version":3,"file":"586.js","mappings":"0TA6DA,IA7CsC,SAAC,GAAsD,I,IAApDA,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,0BAC3D,GAA+BC,EAAAA,EAAAA,MAAvBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QACnB,G,GAAqDC,EAAAA,EAAAA,GAAS,I,EAA9D,E,8zBAAOC,EAAP,KAAkBC,EAAlB,KAAqCC,EAArC,KACcC,GAAaC,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CC,KACQC,GAAkBH,EAAAA,EAAAA,IAChCD,GAAYL,EAAZ,0BAAyCD,EAAzC,qBAA+DC,EAA/D,YAAmF,KACnFO,EAAAA,GAFMG,OAKFC,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEC,iBACGZ,GAAcA,EAAUa,QAG7BC,IAAAA,KAAA,0BAC2BjB,EAD3B,qBACiDC,EADjD,YACoE,CAChEiB,MAAOf,IAERgB,MAAK,SAACC,GACLV,EAAcU,EAASX,MACvBX,GAA0B,GAC1BO,EAAa,OAEdgB,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAA,UAAYH,EAAMF,gBAAlB,aAAY,EAAgBX,KAAM,CAAEiB,SAAU,uBAGpD,CAACvB,IAGH,OACE,gBAAC,IAAD,CAAOP,KAAMA,EAAMC,aAAcA,GAC/B,wBAAM8B,SAAUf,GACd,gBAAC,KAAD,CAAOgB,GAAG,gBACR,wCACA,gBAAC,KAAD,CAAOA,GAAG,SAASC,MAAO1B,EAAW2B,SAAU1B,KAEjD,gBAAC,KAAD,CAAQ2B,KAAK,UAAb,Y,0FCrDKC,GAAc,cAAH,oBAAG,CAAH,4dAyBXC,GAAmB,iBAAH,oBAAG,CAAH,iICC7B,EAnByB,SAAC,GAAqC,IAAnCrC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,aAAcqC,EAAe,EAAfA,SACxCC,GAAkBtB,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAEqB,oBACD,IAEH,OAAKvC,EAKH,gBAACoC,EAAD,CAAaI,QAASvC,GACpB,uBAAKuC,QAASD,GACZ,gBAACF,EAAD,CAAkBG,QAASvC,GAA3B,KACCqC,IAPE,O,mECXLG,EAAoD,GAuB1D,IArBkB,SAACrC,GACjB,IAAMsC,GAAYzB,EAAAA,EAAAA,cAAY,WACxBb,GAAaqC,EAAQrC,KACvBqC,EAAQrC,GAAWuC,oBACZF,EAAQrC,MAEhB,CAACA,IAEJ,OAAKA,GAIAqC,EAAQrC,KACXqC,EAAQrC,GAAawC,IAAAA,QAAA,UAdT,wBAcS,eAA4BxC,GAAa,CAC5DyC,WAAY,CAAC,gBAIV,CAACJ,EAAQrC,GAAYsC,IATnB,MAACI,EAAWJ,K,wJCbVK,GAAY,cAAH,oBAAG,CAAH,sCAITC,GAAS,iBAAH,oBAAG,CAAH,mJASNC,GAAa,cAAH,oBAAG,CAAH,uFAQVC,GAAe,cAAH,oBAAG,CAAH,gPAqBZC,GAAe,iBAAH,mBAAG,CAAH,wLAYZC,GAAmB,cAAH,mBAAG,CAAH,8CAKhBC,GAAa,cAAH,mBAAG,CAAH,wPAaVC,GAAW,cAAH,mBAAG,CAAH,wnBA+CRC,GAAgB,iBAAH,mBAAG,CAAH,4VAqBbC,GAAa,cAAH,mBAAG,CAAH,sEAKVC,GAAiB,cAAH,mBAAG,CAAH,iQAmBdC,GAAQ,cAAH,mBAAG,CAAH,iCAILC,GAAY,iBAAH,mBAAG,CAAH,mJAWTC,GAAkB,iBAAH,mBAAG,CAAH,gN,mBCnLfC,GAAa,cAAH,mBAAG,CAAH,0bAsBVxB,GAAmB,iBAAH,mBAAG,CAAH,iICbvByB,EAAkB,SAAC,GAAyD,IAAvDxB,EAAuD,EAAvDA,SAAUyB,EAA6C,EAA7CA,MAAO/D,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,aAAc+D,EAAkB,EAAlBA,YACxDzB,GAAkBtB,EAAAA,EAAAA,cAAY,SAACC,GACnCA,EAAEqB,oBACD,IAEH,OAAKvC,EAGH,gBAAC6D,EAAD,CAAYrB,QAASvC,GACnB,uBAAK8D,MAAOA,EAAOvB,QAASD,IAC3ByB,GAAe,gBAAC3B,EAAD,CAAkBG,QAASvC,GAA3B,KACfqC,GANa,MAWpBwB,EAAKG,aAAe,CAClBD,aAAa,GAGf,Q,4JCbA,IAuDA,EAvDsC,SAAC,GAAsD,I,IAApDhE,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,aAAciE,EAAgC,EAAhCA,0BAC3D,G,GAAwD5D,EAAAA,EAAAA,GAAS,I,EAAjE,E,8zBAAO6D,EAAP,KAAmBC,EAAnB,KAAuCC,EAAvC,KACA,GAA+BlE,EAAAA,EAAAA,MAAvBC,EAAR,EAAQA,UACR,GADA,EAAmBC,SAKfM,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,EAAS,CAC/C0D,iBAAkB,OAJZ5D,EADR,EACEG,KAOF,GARA,EAEEa,MAFF,EAGEX,QAKmDJ,EAAAA,EAAAA,IACnDD,EAAW,mBAAH,OAAsBN,EAAtB,aAA6C,KACrDQ,EAAAA,IAFiC2D,GAAnC,EAAQ1D,KAAR,EAA2BE,QAKrByD,GAAkBvD,EAAAA,EAAAA,cACtB,SAACC,GACCA,EAAEC,iBACFE,IAAAA,KAAA,0BAEuBjB,EAFvB,aAGI,CACEqE,KAAMN,GAER,CACEO,iBAAiB,IAGpBnD,MAAK,SAACC,GACL0C,GAA0B,GAC1BK,EAAc/C,EAASX,MACvBwD,EAAc,OAEf5C,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAA,UAAYH,EAAMF,gBAAlB,aAAY,EAAgBX,KAAM,CAAEiB,SAAU,uBAGpD,CAACqC,IAGH,OACE,gBAACQ,EAAA,EAAD,CAAO3E,KAAMA,EAAMC,aAAcA,GAC/B,wBAAM8B,SAAUyC,GACd,gBAAC,KAAD,CAAOxC,GAAG,iBACR,kCACA,gBAAC,KAAD,CAAOA,GAAG,YAAYC,MAAOkC,EAAYjC,SAAUkC,KAErD,gBAAC,KAAD,CAAQjC,KAAK,UAAb,W,oHCnDR,IA6CA,EA7CwC,SAAC,GAAwD,I,IAAtDnC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,aAAc2E,EAAkC,EAAlCA,4BACrDxE,GAAcD,EAAAA,EAAAA,MAAdC,UACR,G,GAAqDE,EAAAA,EAAAA,GAAS,I,EAA9D,E,8zBAAOC,EAAP,KAAkBC,EAAlB,KAAqCC,EAArC,KACcC,GAAaC,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,GAA/CC,KACQgE,GAAiBlE,EAAAA,EAAAA,IAC/BD,EAAW,mBAAH,OAAsBN,EAAtB,YAA4C,KACpDQ,EAAAA,GAFMG,OAKFC,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,GACCA,EAAEC,iBACGZ,GAAcA,EAAUa,QAG7BC,IAAAA,KAAA,0BAC2BjB,EAD3B,YACgD,CAC5CkB,MAAOf,IAERgB,MAAK,SAACC,GACLqD,EAAarD,EAASX,MACtB+D,GAA4B,GAC5BnE,EAAa,OAEdgB,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAA,UAAYH,EAAMF,gBAAlB,aAAY,EAAgBX,KAAM,CAAEiB,SAAU,uBAGpD,CAAC1B,EAAWG,IAGd,OACE,gBAACoE,EAAA,EAAD,CAAO3E,KAAMA,EAAMC,aAAcA,GAC/B,wBAAM8B,SAAUf,GACd,gBAAC,KAAD,CAAOgB,GAAG,gBACR,mCACA,gBAAC,KAAD,CAAOA,GAAG,SAASG,KAAK,QAAQF,MAAO1B,EAAW2B,SAAU1B,KAE9D,gBAAC,KAAD,CAAQ2B,KAAK,UAAb,W,UCrDK2C,GAAiB,iBAAH,mBAAG,CAAH,wKAWvB,qBAAGC,UACK,mDAZe,K,0GCM3B,IA+CA,EA/CwB,WACtB,I,IAAQ3E,GAAcD,EAAAA,EAAAA,MAAdC,UAER,GAIIO,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CACvC0D,iBAAkB,MAJZ5D,EADR,EACEG,KAOYmE,GARd,EAEEtD,MAFF,EAGEX,QAK4BJ,EAAAA,EAAAA,IAAmBD,EAAW,mBAAH,OAAsBN,EAAtB,aAA6C,KAAMQ,EAAAA,GAApGC,MACR,G,GAA8CoE,EAAAA,EAAAA,WAAS,G,EAAvD,E,8zBAAOC,EAAP,KAAwBC,EAAxB,KACMC,GAAwBnE,EAAAA,EAAAA,cAAY,WACxCkE,GAAmB,SAACE,GAAD,OAAWA,OAC7B,IAEH,OACE,gCACE,0BACE,gBAACP,EAAD,CAAgBC,SAAUG,EAAiB1C,QAAS4C,GAClD,qBACEE,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhB,yCAEF,4BACIJ,IACAF,aADD,EACCA,EAAaO,KAAI,SAAClF,GAChB,OACE,gBAAC,KAAD,CACEmF,IAAKnF,EAAQoE,KACba,UAAW,qBAAGG,SAA2B,YAAc,OACvDC,GAAE,qBAAgBtF,EAAhB,oBAAqCC,EAAQoE,OAE/C,iCAASpE,EAAQoE,c,w8BCrCjC,IAiFA,EAjFmB,WACjB,IAAQrE,GAAcD,EAAAA,EAAAA,MAAdC,UACR,GAIIO,EAAAA,EAAAA,IAAc,aAAcC,EAAAA,EAAS,CACvC0D,iBAAkB,MAJZ5D,EADR,EACEG,KAMY8E,GAPd,EAEEjE,MAFF,EAGEX,QAI2BJ,EAAAA,EAAAA,IAC3BD,EAAW,mBAAH,OAAsBN,EAAtB,YAA4C,KACpDQ,EAAAA,GAFMC,MAKD+E,EAAP,GAAiBC,EAAAA,EAAAA,GAAUzF,GAA3B,MACA,KAA8C6E,EAAAA,EAAAA,WAAS,GAAvD,GAAOC,EAAP,KAAwBC,EAAxB,KACA,KAAoCF,EAAAA,EAAAA,UAAmB,IAAvD,GAAOa,EAAP,KAAmBC,EAAnB,KAEMX,GAAwBnE,EAAAA,EAAAA,cAAY,WACxCkE,GAAmB,SAACE,GAAD,OAAWA,OAC7B,IAmBH,OAjBAW,EAAAA,EAAAA,YAAU,WACRD,EAAc,MACb,CAAC3F,KAEJ4F,EAAAA,EAAAA,YAAU,WAMR,OALAJ,SAAAA,EAAQK,GAAG,cAAc,SAACpF,GACxBkF,EAAclF,MAIT,WAGL+E,SAAAA,EAAQM,IAAI,iBAEb,CAACN,IAGF,gCACE,0BACE,gBAACd,EAAD,CAAgBC,SAAUG,EAAiB1C,QAAS4C,GAClD,qBACEE,UAAU,mKACV,UAAQ,2BACR,cAAY,UAGhB,gDAEF,4BACIJ,IACAS,aADD,EACCA,EAAYJ,KAAI,SAACY,GACf,IAAMC,EAAWN,EAAWO,SAASF,EAAOnE,IAC5C,OACE,gBAAC,KAAD,CACEwD,IAAKW,EAAOnE,GACZsD,UAAW,qBAAGG,SAA2B,YAAc,OACvDC,GAAE,qBAAgBtF,EAAhB,eAAgC+F,EAAOnE,KAEzC,qBACEsD,UAAS,2GACPc,EAAW,6CAA+C,4BAE5D,cAAY,OACZ,UAAQ,qBACR,wBAAsB,QACtB,0BAAwB,QACxB,uBAAqB,UAEvB,4BAAOD,EAAOG,UACbH,EAAOnE,MAAOtB,aAAd,EAAcA,EAAUsB,KAAM,4C,87BC3C/C,IAAMuE,GAAUC,EAAAA,EAAAA,KAAS,kBAAM,iEACzBC,GAAgBD,EAAAA,EAAAA,KAAS,kBAAM,gEAwNrC,EAtNmD,WAAM,MACvD,KAAwCvB,EAAAA,EAAAA,WAAS,GAAjD,GAAOyB,EAAP,KAAqBC,EAArB,KACA,KAAgE1B,EAAAA,EAAAA,WAAS,GAAzE,GAAO2B,EAAP,KAAiCC,EAAjC,KACA,KAAoD5B,EAAAA,EAAAA,WAAS,GAA7D,GAAO6B,EAAP,KAA2BC,EAA3B,KACA,KAA4D9B,EAAAA,EAAAA,WAAS,GAArE,GAAO+B,EAAP,KAA+B9C,EAA/B,KACA,KAAgEe,EAAAA,EAAAA,WAAS,GAAzE,GAAOgC,EAAP,KAAiCrC,EAAjC,KACA,KAA4DK,EAAAA,EAAAA,WAAS,GAArE,GAAOiC,EAAP,KAA+BhH,EAA/B,KACA,MAA8DI,EAAAA,EAAAA,GAAS,IAAvE,GAAO6G,GAAP,MAAqBC,GAArB,MAA2CC,GAA3C,MACA,MAA4C/G,EAAAA,EAAAA,GAAS,IAArD,GAAOgH,GAAP,MAAeC,GAAf,MAA+BC,GAA/B,MAEQpH,IAAcD,EAAAA,EAAAA,MAAdC,UAER,IAIIO,EAAAA,EAAAA,IAAsB,aAAcC,EAAAA,EAAS,CAC/C0D,iBAAkB,MAJZ5D,GADR,GACEG,KAEAE,IAHF,GAEEW,MAFF,GAGEX,QAKYiE,IAAgBrE,EAAAA,EAAAA,IAAmBD,GAAW,mBAAH,OAAsBN,GAAtB,aAA6C,KAAMQ,EAAAA,GAApGC,KACR,MAA6BgF,EAAAA,EAAAA,GAAUzF,IAAvC,GAAOwF,GAAP,MAAejD,GAAf,OAEAqD,EAAAA,EAAAA,YAAU,WACJhB,IAAetE,IAAYkF,IAC7BA,GAAO6B,KAAK,QAAS,CAAEzF,GAAItB,GAASsB,GAAI0F,SAAU1C,GAAYO,KAAI,SAACoC,GAAD,OAAOA,EAAE3F,UAE5E,CAAC4D,GAAQZ,GAAatE,MAEzBsF,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLrD,QAED,CAACvC,GAAWuC,KAEf,IAAMiF,IAAWC,EAAAA,EAAAA,OACjB7B,EAAAA,EAAAA,YAAU,WACHtF,IACHkH,GAAS,YAEV,CAAClH,KAMJ,IAAMoH,IAAW7G,EAAAA,EAAAA,cAAY,WAC3BI,IAAAA,KACQ,oBAAqB,KAAM,CAC/BqD,iBAAiB,IAElBnD,MAAK,WACJI,QAAQoG,IAAI,YAAarH,IACzBK,IAAO,GAAO,MAGfU,OAAM,SAACuG,GACNrG,QAAQoG,IAAIC,QAEf,IAEGC,IAAqBhH,EAAAA,EAAAA,cAAY,SAACC,GACtCA,EAAEqB,kBACFoE,GAAgB,KACf,IAEGuB,IAAqBjH,EAAAA,EAAAA,cAAY,WAErC0F,GAAgB,SAACtB,GAAD,OAAWA,OAC1B,IAEG8C,IAAyBlH,EAAAA,EAAAA,cAAY,WACzC4F,GAA4B,KAC3B,IAEGuB,IAAuBnH,EAAAA,EAAAA,cAAY,WACvC8F,GAAsB,SAAC1B,GAAD,OAAWA,OAChC,IAEGgD,IAAoBpH,EAAAA,EAAAA,cAAY,WACpCiD,GAA0B,KACzB,IAEGoE,IAAoBrH,EAAAA,EAAAA,cACxB,SAACC,GACCA,EAAEC,iBACGgG,IAAiBA,GAAa/F,QAC9BkG,IAAWA,GAAOlG,QACvBC,IAAAA,KAEI,kBACA,CACEjB,UAAW+G,GACXoB,IAAKjB,IAEP,CAAE5C,iBAAiB,IAEpBnD,MAAK,WACJR,KACA8F,GAA4B,GAC5BQ,GAAgB,IAChBG,GAAU,OAEX/F,OAAM,SAACC,GAAU,MAChBC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAA,UAAYH,EAAMF,gBAAlB,aAAY,EAAgBX,KAAM,CAAEiB,SAAU,uBAGpD,CAACqF,GAAcG,KAGXkB,IAAyBvH,EAAAA,EAAAA,cAAY,WACzC2D,GAA4B,KAC3B,IAEG3E,IAAegB,EAAAA,EAAAA,cAAY,WAC/B4F,GAA4B,GAC5B3C,GAA0B,GAC1BU,GAA4B,GAC5B1E,GAA0B,KACzB,IAGD,OAAKQ,GAIL,2BACE,gBAACsC,EAAD,KACE,gBAACD,EAAD,KACE,wBAAMP,QAAS0F,IACb,gBAACjF,EAAD,CAAYwF,IAAKC,IAAAA,IAAahI,cAAb,EAAaA,GAAU4F,SAAU,CAAEqC,EAAG,OAAQC,EAAG,UAAYC,IAAKnI,cAAF,EAAEA,GAAUoI,aAC5FpC,GACC,gBAAC,EAAD,CAAM3C,MAAO,CAAEgF,MAAO,IAAKC,IAAK,MAAQhJ,KAAM0G,EAAczG,aAAcgI,IACxE,gBAAC/E,EAAD,KACE,uBAAKuF,IAAKC,IAAAA,IAAahI,cAAb,EAAaA,GAAU4F,SAAU,CAAEqC,EAAG,OAAQC,EAAG,UAAYC,IAAKnI,cAAF,EAAEA,GAAUoI,aACtF,2BACE,wBAAM9G,GAAG,gBAAgBtB,cAAzB,EAAyBA,GAAU4F,UACnC,wBAAMtE,GAAG,kBAAT,WAEF,gBAACmB,EAAD,CAAcX,QAASsF,IAAvB,aAOZ,gBAAC1E,EAAD,KACE,gBAACC,EAAD,KACG3C,UADH,UACGA,GAAU2C,kBADb,aACG,EAAsBkC,KAAI,SAAC0D,GAC1B,OACE,gBAAC,KAAD,CAAMzD,IAAKyD,EAAGjH,GAAI0D,GAAE,qBAAgB,IAAhB,gBAClB,gBAAC9B,EAAD,KAAkBqF,EAAGxE,KAAKyE,MAAM,EAAG,GAAGC,mBAI5C,gBAACxF,EAAD,CAAWnB,QAAS2F,IAApB,MAEF,gBAAC7E,EAAD,KACE,gBAACC,EAAD,CAAef,QAAS4F,IAAxB,OACA,gBAAC5E,EAAD,KACE,gBAAC,EAAD,CAAMxD,KAAM8G,EAAoB7G,aAAcmI,GAAsBrE,MAAO,CAAEiF,IAAK,GAAII,KAAM,KAC1F,gBAAC3F,EAAD,KACE,wCACC,0BAAQjB,QAASgG,IAAjB,kBACA,0BAAQhG,QAAS6F,IAAjB,SACD,0BAAQ7F,QAASsF,IAAjB,UAGJ,gBAAC,EAAD,MACA,gBAAC,EAAD,QAIJ,gBAACnD,EAAA,EAAD,CAAO3E,KAAM4G,EAA0B3G,aAAcA,IACnD,wBAAM8B,SAAUuG,IACd,gBAAC,KAAD,CAAOtG,GAAG,mBACR,yCACA,gBAAC,KAAD,CAAOA,GAAG,YAAYC,MAAOkF,GAAcjF,SAAUkF,MAEvD,gBAAC,KAAD,CAAOpF,GAAG,uBACR,0CACA,gBAAC,KAAD,CAAOA,GAAG,YAAYC,MAAOqF,GAAQpF,SAAUqF,MAEjD,gBAAC,KAAD,CAAQpF,KAAK,UAAb,UAIJ,gBAACuB,EAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAO2F,KAAK,oBAAoBC,QAAS,gBAAC/C,EAAD,QACzC,gBAAC,KAAD,CAAO8C,KAAK,UAAUC,QAAS,gBAAC7C,EAAD,WAIrC,gBAAC,EAAD,CACEzG,KAAMgH,EACN/G,aAAcA,GACdiE,0BAA2BA,IAE7B,gBAAC,EAAD,CACElE,KAAMiH,EACNhH,aAAcA,GACd2E,4BAA6BA,IAE/B,gBAAC2E,EAAA,EAAD,CACEvJ,KAAMkH,EACNjH,aAAcA,GACdC,0BAA2BA,KArFT,O","sources":["webpack://alecture/./components/InviteChannelModal/index.tsx","webpack://alecture/./components/Modal/styles.tsx","webpack://alecture/./components/Modal/index.tsx","webpack://alecture/./hooks/useSocket.ts","webpack://alecture/./layouts/Workspace/styles.tsx","webpack://alecture/./components/Menu/styles.tsx","webpack://alecture/./components/Menu/index.tsx","webpack://alecture/./components/CreactChanneModal/index.tsx","webpack://alecture/./components/InviteWorkspaceModal/index.tsx","webpack://alecture/./components/DMList/styles.tsx","webpack://alecture/./components/ChannelList/index.tsx","webpack://alecture/./components/DMList/index.tsx","webpack://alecture/./layouts/Workspace/index.tsx"],"sourcesContent":["import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteChannelModal: (flag: boolean) => void;\n}\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: mutateMembers } = useSWR<IUser[]>(\n    userData && channel ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n      axios\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\n          email: newMember,\n        })\n        .then((response) => {\n          mutateMembers(response.data);\n          setShowInviteChannelModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>채널 멤버 초대</span>\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteChannelModal;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { FC, useCallback } from 'react';\nimport { CloseModalButton, CreateModal } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  children: React.ReactNode;\n}\n\nconst Modal: FC<Props> = ({ show, onCloseModal, children }) => {\n  const stopPropagation = useCallback((e: any) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import io from 'socket.io-client';\nimport { useCallback } from 'react';\nimport axios from 'axios';\n\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\nconst backUrl = 'http://localhost:3095';\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\n  const disconnet = useCallback(() => {\n    if (workspace && sockets[workspace]) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n\n  if (!workspace) {\n    return [undefined, disconnet];\n  }\n\n  if (!sockets[workspace]) {\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n  }\n\n  return [sockets[workspace], disconnet];\n};\n\nexport default useSocket;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { FC, CSSProperties, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: (e: any) => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n  children: React.ReactNode;\n}\n\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e: any) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) return null;\n\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div style={style} onClick={stopPropagation}></div>\n      {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n      {children}\n    </CreateMenu>\n  );\n};\n\nMenu.defaultProps = {\n  closeButton: true,\n}; // 상위 컴포넌트에서 closeButton를 따로 true로 명시안해줘도 여기 코드때문에 항상 true로 되어있음.\n\nexport default Menu;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport { toNamespacedPath } from 'node:path/win32';\nimport React, { useCallback, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\n\nconst CreactChanneModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n\n  const { data: channelData, mutate: mutateChannel } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      axios\n        .post(\n          `/api/workspaces/${workspace}/channels`,\n          {\n            name: newChannel,\n          },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((response) => {\n          setShowCreateChannelModal(false);\n          mutateChannel(response.data); // 채널생성하자마자 다시 불러오게끔 !\n          setNewChannel('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널</span>\n          <Input id=\"workspace\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreactChanneModal;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: mutateMember } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (!newMember || !newMember.trim()) {\n        return;\n      } //input창 검사\n      axios\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        .then((response) => {\n          mutateMember(response.data);\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [workspace, newMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { CollapseButton } from '@components/DMList/styles';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return (\n              <NavLink\n                key={channel.name}\n                className={({ isActive }) => (isActive ? 'JJAPSLACK' : 'not')}\n                to={`/workspace/${workspace}/channel/${channel.name}`}\n              >\n                <span># {channel.name}</span>\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import useSocket from '@hooks/useSocket';\nimport { IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { CollapseButton } from './styles';\n\nconst DMList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return (\n              <NavLink\n                key={member.id}\n                className={({ isActive }) => (isActive ? 'JJAPSLACK' : 'not')}\n                to={`/workspace/${workspace}/dm/${member.id}`}\n              >\n                <i\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n                  }`}\n                  aria-hidden=\"true\"\n                  data-qa=\"presence_indicator\"\n                  data-qa-presence-self=\"false\"\n                  data-qa-presence-active=\"false\"\n                  data-qa-presence-dnd=\"false\"\n                />\n                <span>{member.nickname}</span>\n                {member.id === userData?.id && <span> (나)</span>}\n              </NavLink>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import axios from 'axios';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { Route, Routes, useNavigate } from 'react-router';\nimport {\n  Header,\n  ProfileImg,\n  RightMenu,\n  WorkspaceWrapper,\n  Workspaces,\n  Channels,\n  WorkspaceName,\n  Chats,\n  MenuScroll,\n  ProfileModal,\n  LogOutButton,\n  WorkspaceButton,\n  AddButton,\n  WorkspaceModal,\n} from './styles';\nimport gravatar from 'gravatar';\nimport Menu from '@components/Menu';\nimport { Link } from 'react-router-dom';\nimport { IChannel, IUser } from '@typings/db';\nimport useInput from '@hooks/useInput';\nimport { toast } from 'react-toastify';\nimport CreactChanneModal from '@components/CreactChanneModal';\nimport loadable from '@loadable/component';\nimport Modal from '@components/Modal';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { useParams } from 'react-router';\nimport InviteWorkspaceModal from '@components/InviteWorkspaceModal';\nimport InviteChannelModal from '@components/InviteChannelModal';\nimport ChannelList from '@components/ChannelList';\nimport DMList from '@components/DMList';\nimport useSocket from '@hooks/useSocket';\n\nconst Channel = loadable(() => import('@pages/Channel'));\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\nconst Workspace: FC<React.PropsWithChildren<{}>> = () => {\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  const { workspace } = useParams<{ workspace: string }>();\n\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser | false>('/api/users', fetcher, {\n    dedupingInterval: 2000,\n  });\n\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher); // 로그인 한 상태일때만 요청할 수 있게 ! -> 조건부요청. 로그인하지 않았다면 요청X\n  const [socket, disconnect] = useSocket(workspace);\n\n  useEffect(() => {\n    if (channelData && userData && socket) {\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [workspace, disconnect]);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!userData) {\n      navigate('/login');\n    }\n  }, [userData]);\n\n  // useEffect(() => {\n  //   return disconnect();\n  // }, [workspace, disconnect]);\n\n  const onLogout = useCallback(() => {\n    axios\n      .post('/api/users/logout', null, {\n        withCredentials: true,\n      })\n      .then(() => {\n        console.log('로그아웃 성공 !', userData);\n        mutate(false, false);\n        //! navigate('/login');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const onCloseUserProfile = useCallback((e: any) => {\n    e.stopPropagation();\n    setShowUserMenu(false);\n  }, []);\n\n  const onClickUserProfile = useCallback(() => {\n    // console.trace('------------click', showUserMenu);\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n      axios\n        .post(\n          '/api/workspaces',\n          {\n            workspace: newWorkspace,\n            url: newUrl,\n          },\n          { withCredentials: true },\n        )\n        .then(() => {\n          mutate();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkspace('');\n          setNewUrl('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    setShowInviteWorkspaceModal(false);\n    setShowInviteChannelModal(false);\n  }, []);\n\n  {\n    if (!userData) return null;\n  }\n\n  return (\n    <div>\n      <Header>\n        <RightMenu>\n          <span onClick={onClickUserProfile}>\n            <ProfileImg src={gravatar.url(userData?.nickname, { s: '28px', d: 'retro' })} alt={userData?.toString()} />\n            {showUserMenu && (\n              <Menu style={{ right: '0', top: '38' }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData?.nickname, { s: '36px', d: 'retro' })} alt={userData?.toString()} />\n                  <div>\n                    <span id=\"profile-name\">{userData?.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                  <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n                </ProfileModal>\n              </Menu>\n            )}\n          </span>\n        </RightMenu>\n      </Header>\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces?.map((ws) => {\n            return (\n              <Link key={ws.id} to={`/workspace/${123}/channel/일반`}>\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n              </Link>\n            );\n          })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>짭슬랙</WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>JJAP SLACK</h2>\n                {<button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>}\n                {<button onClick={onClickAddChannel}>채널만들기</button>}\n                <button onClick={onLogout}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n          </MenuScroll>\n        </Channels>\n\n        <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n          <form onSubmit={onCreateWorkspace}>\n            <Label id=\"workspace-label\">\n              <span>워크스페이스 이름</span>\n              <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n            </Label>\n            <Label id=\"workspace-url-label\">\n              <span>워크스페이스 url</span>\n              <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n            </Label>\n            <Button type=\"submit\">생성하기</Button>\n          </form>\n        </Modal>\n\n        <Chats>\n          <Routes>\n            <Route path=\"/channel/:channel\" element={<Channel />} />\n            <Route path=\"/dm/:id\" element={<DirectMessage />} />\n          </Routes>\n        </Chats>\n      </WorkspaceWrapper>\n      <CreactChanneModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      <InviteChannelModal\n        show={showInviteChannelModal}\n        onCloseModal={onCloseModal}\n        setShowInviteChannelModal={setShowInviteChannelModal}\n      />\n    </div>\n  );\n};\n\nexport default Workspace;\n"],"names":["show","onCloseModal","setShowInviteChannelModal","useParams","workspace","channel","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","mutateMembers","mutate","onInviteMember","useCallback","e","preventDefault","trim","axios","email","then","response","catch","error","console","dir","toast","position","onSubmit","id","value","onChange","type","CreateModal","CloseModalButton","children","stopPropagation","onClick","sockets","disconnet","disconnect","io","transports","undefined","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateMenu","Menu","style","closeButton","defaultProps","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","dedupingInterval","mutateChannel","onCreateChannel","name","withCredentials","Modal","setShowInviteWorkspaceModal","mutateMember","CollapseButton","collapse","channelData","useState","channelCollapse","setChannelCollapse","toggleChannelCollapse","prev","className","map","key","isActive","to","memberData","socket","useSocket","onlineList","setOnlineList","useEffect","on","off","member","isOnline","includes","nickname","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","showInviteWorkspaceModal","showInviteChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangeNewUrl","setNewUrl","emit","channels","v","navigate","useNavigate","onLogout","log","err","onCloseUserProfile","onClickUserProfile","onClickCreateWorkspace","toggleWorkspaceModal","onClickAddChannel","onCreateWorkspace","url","onClickInviteWorkspace","src","gravatar","s","d","alt","toString","right","top","ws","slice","toUpperCase","left","path","element","InviteChannelModal"],"sourceRoot":""}